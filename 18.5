import pandas as pd
import numpy as np

import seaborn as sns
import matplotlib.pyplot as plt
from sklearn.metrics import balanced_accuracy_score

from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression, Ridge, RidgeCV, Lasso, LassoCV

count = 0
M = 10000
for i in range(M):
    n1 = pd.DataFrame(np.random.normal(loc=0, size=(10)))
    n2 = pd.DataFrame(np.random.normal(loc=0, size=(10)))
    n1['class'] = 1
    n2['class'] = 2
    N = pd.concat([n1,n2])
    X = N.drop('class', axis=1)
    y = N['class']
    X_train, X_test, y_train, y_test = train_test_split(X, y, stratify=y, random_state=17)
    model = LogisticRegression(penalty="none")
    model.fit(X_train, y_train)
    y_pred = model.predict(X_test) 
    score = balanced_accuracy_score(y_test, y_pred)
    if score == 1:
      count += 1

prob = count /100
print(prob)

1.65
